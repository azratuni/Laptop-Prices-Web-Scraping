# -*- coding: utf-8 -*-
"""LaptopPrices_Ryans.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1CoLHwMFGbp86vyxeQV0ugwbjPVP1xUGw
"""

# import libraries
import requests
from bs4 import BeautifulSoup as bs

url = 'https://www.ryanscomputers.com/category/laptop-all-laptop?limit=400&osp=1&st=0'

# query the website and return the html to the variable ‘response’
response = requests.get(url).text

soup = bs(response, "html.parser")

print(soup)

product_names = []
processor_types = []
product_rams = []
product_storages = []
product_displays = []
product_prices = []

# Find all product details
for product in soup.find_all('div', class_='card-body text-center'):
    # Get product name, link, and ID
    product_name_link = product.find('a', {'data-bs-toggle': 'tooltip'})
    if product_name_link:
        product_info = product_name_link.get('title').split('<br>')
        product_name = product_info[0]
        product_names.append(product_name)
        print(f'Product Name: {product_name}')

    # Get product attributes
    product_attributes = product.find_all('li', class_='card-text p-0 m-0 fw-normal')
    for attribute in product_attributes:
        attribute_text = attribute.text
        if 'Processor Type' in attribute_text:
            processor_type = attribute_text.replace("Processor Type. - ", "")
            processor_types.append(processor_type)
            print(f'Processor Type: {attribute_text.replace("Processor Type. - ", "")}')

        elif 'RAM' in attribute_text:
            product_ram = attribute_text.replace("RAM - ", "")
            product_rams.append(product_ram)
            print(f'RAM: {attribute_text.replace("RAM - ", "")}')

        elif 'Storage' in attribute_text:
            product_storage = attribute_text.replace("Storage - ", "")
            product_storages.append(product_storage)
            print(f'Storage: {attribute_text.replace("Storage - ", "")}')

        elif 'Display Size (Inch)' in attribute_text:
            product_display = attribute_text.replace("Display Size (Inch) - ", "")
            product_displays.append(product_display)
            print(f'Display Size (Inch): {attribute_text.replace("Display Size (Inch) - ", "")}')

    # Get product price
    product_price = product.find('p', class_='pr-text cat-sp-text pb-1')
    if product_price:
        price = product_price.text.replace('Tk ', '')
        product_prices.append(price)
        print(f'Product Price: {price}')

product_names[:5]

processor_types[:5]

product_rams[:5]

product_storages[:5]



product_displays[:5]

product_prices[:5]

product_prices_len = len(product_prices)
product_prices_len

"""# Export to Excel CSV"""

import csv

# Prepare data for CSV
rows = zip(product_names, processor_types, product_rams, product_storages, product_displays, product_prices)

# Write to CSV
with open('LaptopPrices_Ryans.csv', 'w', newline='') as f:
    writer = csv.writer(f)
    writer.writerow(["Product Name", "Processor Type", "RAM", "Storage", "Display", "Price"])  # writing headers
    for row in rows:
        writer.writerow(row)

from google.colab import files

# Download the file to your computer
files.download('LaptopPrices_Ryans.csv')

import pandas as pd
LaptopPrices_Ryans = pd.read_csv("LaptopPrices_Ryans.csv")

LaptopPrices_Ryans.head()

LaptopPrices_Ryans.shape

"""**As we can see, a dataset consisting 1786 rows and 9 columns of different laptop attribues has successfully been created.**"""